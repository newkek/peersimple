# ::::: GLOBAL PARAMETERS :::::

#Number of simulations
simulation.experiments 1

#End time of the experimentation
simulation.endtime 1000

#Network size (Number of nodes)
network.size 5 

#random seed
random.seed 1112002 



# ::::: TRANSPORT :::::

#Name of the transport protocol class
protocol.transport application.MatrixTransport

#Path of the latency configuration file
protocol.transport.matrix network.matrix



# ::::: APPLICATION :::::

#Name of the application protocol class
protocol.applicative application.ApplicationProtocol

#Link between the application and the transport protocols
protocol.applicative.transport transport

#We want the application protocol to know its pid
protocol.applicative.myself applicative

protocol.applicative.stateMinTime 10

protocol.applicative.stateMaxTime 20

protocol.applicative.checkpointMinTime 45

protocol.applicative.checkpointMaxTime 75

#Probabily to send a message to a node after the reception of a message INC_STATE
protocol.applicative.probaMessage 0.5

#Probabily to send a message to a node after the reception of a message INC_STATE
protocol.applicative.probaBroadcast 0.005

protocol.applicative.heartbeat.delay 10

protocol.applicative.heartbeat.checkDelay 30

protocol.applicative.nbAreYouAlive 3



# ::::: INITIALIZER :::::

#Name of class initialisation class
init.initializer application.Initializer

#Initilisation class must know the application protocol's pid
init.initializer.applicationProtocolPid applicative


# ::::: CONTROLER :::::::

#d√©claraion
control.controler application.Controler

#pour que le module connaisse le pid de la couche applicative
control.controler.applicationProtocolPid applicative

control.controler.probaCrash 0.05

control.controler.step 50

